const t=JSON.parse('{"key":"v-0a888444","path":"/posts/ecmascript/class.html","title":"JavaScript ES6 class 类","lang":"zh-CN","frontmatter":{"description":"JavaScript ES6 class 类 constructor内外都可以定义属性，前面加static为静态属性 类里面，方法(){}为成员方法，加static为静态方法constructor内this.方法()为实例方法 继承父类方法使用extends，子类没有constructor时会默认调用父类的constructor 子类constructor内使用this之前必须调用super()方法把父类的this继承下来 成员属性、方法、静态属性、方法也会继承下来。子类使用父类方法可以super.方法名，也可以this.方法 子类用super.父类属性，也可以使用this来获取 静态方法不能访问成员属性，成员方法不能访问静态属性","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/ecmascript/class.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/ecmascript/class.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript ES6 class 类"}],["meta",{"property":"og:description","content":"JavaScript ES6 class 类 constructor内外都可以定义属性，前面加static为静态属性 类里面，方法(){}为成员方法，加static为静态方法constructor内this.方法()为实例方法 继承父类方法使用extends，子类没有constructor时会默认调用父类的constructor 子类constructor内使用this之前必须调用super()方法把父类的this继承下来 成员属性、方法、静态属性、方法也会继承下来。子类使用父类方法可以super.方法名，也可以this.方法 子类用super.父类属性，也可以使用this来获取 静态方法不能访问成员属性，成员方法不能访问静态属性"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript ES6 class 类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\",\\"url\\":\\"https://www.h7ml.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":1.13,"words":339},"filePathRelative":"posts/ecmascript/class.md","localizedDate":"2023年5月3日","excerpt":"<h1> JavaScript ES6 class 类</h1>\\n<ol>\\n<li><code>constructor</code>内外都可以定义属性，前面加<code>static</code>为静态属性</li>\\n<li>类里面，<code>方法(){}</code>为成员方法，加<code>static</code>为静态方法<code>constructor</code>内<code>this.方法()</code>为实例方法</li>\\n<li>继承父类方法使用<code>extends</code>，子类没有<code>constructor</code>时会默认调用父类的<code>constructor</code></li>\\n<li>子类<code>constructor</code>内使用<code>this</code>之前必须调用<code>super()</code>方法把父类的<code>this</code>继承下来</li>\\n<li>成员属性、方法、静态属性、方法也会继承下来。子类使用父类方法可以<code>super.方法名</code>，也可以<code>this.方法</code></li>\\n<li>子类用<code>super.父类属性</code>，也可以使用<code>this</code>来获取</li>\\n<li>静态方法不能访问成员属性，成员方法不能访问静态属性</li>\\n</ol>","autoDesc":true}');export{t as data};

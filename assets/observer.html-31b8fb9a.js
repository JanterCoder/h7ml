const n=JSON.parse('{"key":"v-b595b75e","path":"/posts/designPattern/observer.html","title":"观察者模式","lang":"zh-CN","frontmatter":{"title":"观察者模式","category":["设计模式","frontend"],"tag":["设计模式","frontend"],"author":"h7ml","image":"https://www.h7ml.cn/logo.png","banner":"https://www.h7ml.cn/logo.png","date":"2022-01-27T09:22:44.000Z","description":"场景 假设我们在开发一款外卖网站，进入网站的时候，第一步需要去请求后端接口得到用户的常用外卖地址。然后再去请求其他接口、渲染页面。如果什么都不考虑可能会直接这样写： // getAddress 异步请求 // 页面里有三个模块 A，B，C 需要拿到地址后再进行下一步 // A、B、C 三个模块都是不同人写的，提供了不同的方法供我们调用 getAddress().then((res) =&gt; { const address = res.address; A.update(address); B.next(address); C.change(address); });","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/designPattern/observer.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/designPattern/observer.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"观察者模式"}],["meta",{"property":"og:description","content":"场景 假设我们在开发一款外卖网站，进入网站的时候，第一步需要去请求后端接口得到用户的常用外卖地址。然后再去请求其他接口、渲染页面。如果什么都不考虑可能会直接这样写： // getAddress 异步请求 // 页面里有三个模块 A，B，C 需要拿到地址后再进行下一步 // A、B、C 三个模块都是不同人写的，提供了不同的方法供我们调用 getAddress().then((res) =&gt; { const address = res.address; A.update(address); B.next(address); C.change(address); });"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.h7ml.cn/logo.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"观察者模式"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:published_time","content":"2022-01-27T09:22:44.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"观察者模式\\",\\"image\\":[\\"https://www.h7ml.cn/logo.png\\"],\\"datePublished\\":\\"2022-01-27T09:22:44.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":5.79,"words":1738},"filePathRelative":"posts/designPattern/observer.md","localizedDate":"2022年1月27日","excerpt":"<h1> 场景</h1>\\n<p>假设我们在开发一款外卖网站，进入网站的时候，第一步需要去请求后端接口得到用户的常用外卖地址。然后再去请求其他接口、渲染页面。如果什么都不考虑可能会直接这样写：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// getAddress 异步请求</span>\\n<span class=\\"token comment\\">// 页面里有三个模块 A，B，C 需要拿到地址后再进行下一步</span>\\n<span class=\\"token comment\\">// A、B、C 三个模块都是不同人写的，提供了不同的方法供我们调用</span>\\n\\n<span class=\\"token function\\">getAddress</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">res</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> address <span class=\\"token operator\\">=</span> res<span class=\\"token punctuation\\">.</span>address<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token constant\\">A</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">update</span><span class=\\"token punctuation\\">(</span>address<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token constant\\">B</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">next</span><span class=\\"token punctuation\\">(</span>address<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token constant\\">C</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">change</span><span class=\\"token punctuation\\">(</span>address<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};

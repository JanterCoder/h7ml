const e=JSON.parse(`{"key":"v-ec558aee","path":"/posts/designPattern/iteratorPattern.html","title":"迭代器模式","lang":"zh-CN","frontmatter":{"title":"迭代器模式","category":["设计模式","frontend"],"tag":["设计模式","frontend"],"author":"h7ml","image":"https://www.h7ml.cn/logo.png","banner":"https://www.h7ml.cn/logo.png","date":"2022-02-26T09:09:00.000Z","description":"场景 for...of.... 的原理是？ 迭代器模式 看下 维基百科 给的定义： In object-oriented programming, the iterator pattern is a design pattern in which an iterator is used to traverse a container and access the container's elements. The iterator pattern decouples algorithms from containers; in some cases, algorithms are necessarily container-specific and thus cannot be decoupled.","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/designPattern/iteratorPattern.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/designPattern/iteratorPattern.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"迭代器模式"}],["meta",{"property":"og:description","content":"场景 for...of.... 的原理是？ 迭代器模式 看下 维基百科 给的定义： In object-oriented programming, the iterator pattern is a design pattern in which an iterator is used to traverse a container and access the container's elements. The iterator pattern decouples algorithms from containers; in some cases, algorithms are necessarily container-specific and thus cannot be decoupled."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.h7ml.cn/logo.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"迭代器模式"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:published_time","content":"2022-02-26T09:09:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"迭代器模式\\",\\"image\\":[\\"https://www.h7ml.cn/logo.png\\"],\\"datePublished\\":\\"2022-02-26T09:09:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":3.31,"words":994},"filePathRelative":"posts/designPattern/iteratorPattern.md","localizedDate":"2022年2月26日","excerpt":"<h1> 场景</h1>\\n<p><code>for...of....</code> 的原理是？</p>\\n<h1> 迭代器模式</h1>\\n<p>看下 <a href=\\"https://en.wikipedia.org/wiki/Iterator_pattern\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">维基百科</a> 给的定义：</p>\\n<blockquote>\\n<p>In <a href=\\"https://en.wikipedia.org/wiki/Object-oriented_programming\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">object-oriented programming</a>, the <strong>iterator pattern</strong> is a <a href=\\"https://en.wikipedia.org/wiki/Design_pattern_(computer_science)\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">design pattern</a> in which an <a href=\\"https://en.wikipedia.org/wiki/Iterator\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">iterator</a> is used to traverse a <a href=\\"https://en.wikipedia.org/wiki/Container_(data_structure)\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">container</a> and access the container's elements. The iterator pattern decouples <a href=\\"https://en.wikipedia.org/wiki/Algorithm\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">algorithms</a> from containers; in some cases, algorithms are necessarily container-specific and thus cannot be decoupled.</p>\\n</blockquote>","autoDesc":true}`);export{e as data};

const t=JSON.parse(`{"key":"v-312f1724","path":"/posts/ecmascript/Iterator.html","title":"JavaScript ES6 Iterator 迭代器","lang":"zh-CN","frontmatter":{"description":"JavaScript ES6 Iterator 迭代器 核心概念： 迭代器是一个统一的接口，作用是使各种数据结构可被便捷的访问 是 Symbol.iterator 下的方法实现。提供这种接口的有 Array、String、arguments、Map、Set、Dom 元素（正在进行中）。可以被 for...of 遍历 Array 下有 Symbol 属性，所以arr[Symbol.iterator]()调用，返回 Iterator 对象 iterator 对象下 next 方法单次调用方法{value: '本次遍历的值', done: 是否遍历结束，返回 true/false }","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/ecmascript/Iterator.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/ecmascript/Iterator.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript ES6 Iterator 迭代器"}],["meta",{"property":"og:description","content":"JavaScript ES6 Iterator 迭代器 核心概念： 迭代器是一个统一的接口，作用是使各种数据结构可被便捷的访问 是 Symbol.iterator 下的方法实现。提供这种接口的有 Array、String、arguments、Map、Set、Dom 元素（正在进行中）。可以被 for...of 遍历 Array 下有 Symbol 属性，所以arr[Symbol.iterator]()调用，返回 Iterator 对象 iterator 对象下 next 方法单次调用方法{value: '本次遍历的值', done: 是否遍历结束，返回 true/false }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript ES6 Iterator 迭代器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\",\\"url\\":\\"https://www.h7ml.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":0.61,"words":184},"filePathRelative":"posts/ecmascript/Iterator.md","localizedDate":"2023年5月3日","excerpt":"<h1> JavaScript ES6 Iterator 迭代器</h1>\\n<p>核心概念：</p>\\n<ol>\\n<li>迭代器是一个统一的接口，作用是使各种数据结构可被便捷的访问</li>\\n<li>是 Symbol.iterator 下的方法实现。提供这种接口的有 Array、String、arguments、Map、Set、Dom 元素（正在进行中）。可以被 for...of 遍历</li>\\n<li>Array 下有 Symbol 属性，所以<code>arr[Symbol.iterator]()</code>调用，返回 Iterator 对象</li>\\n<li>iterator 对象下 next 方法单次调用方法<code>{value: '本次遍历的值', done: 是否遍历结束，返回 true/false }</code></li>\\n</ol>","autoDesc":true}`);export{t as data};

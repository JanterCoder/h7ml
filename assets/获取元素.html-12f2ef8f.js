import{_ as n,o as s,c as a,f as t}from"./app-2a9bb723.js";const c={},e=t(`<h1 id="javascript-document-获取元素-选择符" tabindex="-1"><a class="header-anchor" href="#javascript-document-获取元素-选择符" aria-hidden="true">#</a> JavaScript document 获取元素（选择符）</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;css选择器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 只选择符合的第一个，静态获取，后添加的元素不会加进来</span>
document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;css选择器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 取得 span 伪数组集合</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">MatchesSelector</span><span class="token punctuation">(</span><span class="token string">&#39;body.page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这个方法能够判断能否 被以上两个方法选择返回</span>
document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;标签名&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取标签名 集合</span>
document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;class名&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取 class 集合</span>
document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">&#39;name属性值&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用在表单元素</span>

div<span class="token punctuation">.</span><span class="token function">namedItem</span><span class="token punctuation">(</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// div 中 name 属性为 aa 的集合</span>
div<span class="token punctuation">[</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// div 中 name 属性为 aa 的集合</span>
div<span class="token punctuation">.</span>tagName<span class="token punctuation">;</span> <span class="token comment">// DIV 在 HTML 中始终以大写表示</span>

document<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token comment">// 取得文档标题</span>
document<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">;</span> <span class="token comment">// 取得地址栏显示的 URL 不能修改</span>
document<span class="token punctuation">.</span>domain<span class="token punctuation">;</span> <span class="token comment">// 域 p2p.wrox.com 修改成 wrox.com 可以成功 修改成其他跨域会出错</span>
document<span class="token punctuation">.</span>referrer<span class="token punctuation">;</span> <span class="token comment">// 取得来源此页面的URL</span>

<span class="token comment">// 特殊集合</span>
document<span class="token punctuation">.</span>anchors<span class="token punctuation">;</span> <span class="token comment">// 所有带 name 特性的 a 标签</span>
document<span class="token punctuation">.</span>forms<span class="token punctuation">;</span> <span class="token comment">// 所有 form 元素</span>
document<span class="token punctuation">.</span>images<span class="token punctuation">;</span> <span class="token comment">// 所有 img 元素</span>
document<span class="token punctuation">.</span>links<span class="token punctuation">;</span> <span class="token comment">// 所有带 href 特性的 a元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意 querySelector 系列是静态的，在获取元素之后新添加的节点不会加进来 :::</p></div>`,3),p=[e];function o(i,l){return s(),a("div",null,p)}const m=n(c,[["render",o],["__file","获取元素.html.vue"]]);export{m as default};

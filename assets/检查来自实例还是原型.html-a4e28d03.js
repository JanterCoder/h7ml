import{_ as n,o as s,c as a,f as t}from"./app-2a9bb723.js";const e={},p=t(`<h1 id="javascript-检查来自实例还是原型" tabindex="-1"><a class="header-anchor" href="#javascript-检查来自实例还是原型" aria-hidden="true">#</a> JavaScript 检查来自实例还是原型</h1><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fn1 <span class="token keyword">instanceof</span> <span class="token class-name">Fun</span><span class="token punctuation">;</span> <span class="token comment">// fn1 是由构造函数 Fun 构造出来的吗？返回 Boolean</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 Person 构造函数的原型</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检查来自实例还是原型" tabindex="-1"><a class="header-anchor" href="#检查来自实例还是原型" aria-hidden="true">#</a> 检查来自实例还是原型</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Person<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;fun&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 是来自实例返回 true，不是返回 false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 实例或原型上有都返回 true</span>

<span class="token comment">// 利用hasOwnProperty 与 in 判断到底来自实例还是原型</span>
<span class="token keyword">function</span> <span class="token function">hasO</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> name <span class="token keyword">in</span> object<span class="token punctuation">;</span>
  <span class="token comment">// 判断是不是来自实例，如果不是，再in判断是不是原型</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="返回实例或原型" tabindex="-1"><a class="header-anchor" href="#返回实例或原型" aria-hidden="true">#</a> 返回实例或原型</h3><p>将实例保存为数组</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;nn&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;name&quot;, &quot;sayName&quot;] 原型中的所有实例</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;age&quot;] 只返回p 的实例</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;constructor&quot;, &quot;name&quot;, &quot;job&quot;, &quot;sayName&quot;] 包含constructor</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(i,u){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","检查来自实例还是原型.html.vue"]]);export{r as default};

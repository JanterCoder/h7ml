const e=JSON.parse('{"key":"v-6368f7de","path":"/posts/vue/","title":"vue","lang":"zh-CN","frontmatter":{"icon":"vue","date":"2021-06-27T00:00:00.000Z","author":"h7ml","title":"vue","category":"vue","tag":"vue","star":true,"index":true,"dir":{"order":6},"description":"vue 源码分析 核心 Vue 响应式的核心是利用 Object.defineProperty()这个方法进行数据劫持和观察者模式进行数据响应式的。Object.defineProperty()这个方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。具体用法如下： ​ 它有三个参数，第一个是 object，它代表要定义属性的对象。；第二个是 prop，它代表目标对象的属性值；第三个参数是 descriptor，它代表要定义或修改的属性描述符。 ​ 响应式用法：","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/vue/"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/vue/"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"vue"}],["meta",{"property":"og:description","content":"vue 源码分析 核心 Vue 响应式的核心是利用 Object.defineProperty()这个方法进行数据劫持和观察者模式进行数据响应式的。Object.defineProperty()这个方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。具体用法如下： ​ 它有三个参数，第一个是 object，它代表要定义属性的对象。；第二个是 prop，它代表目标对象的属性值；第三个参数是 descriptor，它代表要定义或修改的属性描述符。 ​ 响应式用法："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-01T19:12:58.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:published_time","content":"2021-06-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-01T19:12:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-06-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-01T19:12:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"vue 源码分析","slug":"vue-源码分析","link":"#vue-源码分析","children":[{"level":3,"title":"核心","slug":"核心","link":"#核心","children":[]},{"level":3,"title":"观察者模式","slug":"观察者模式","link":"#观察者模式","children":[]},{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":3,"title":"mount 阶段","slug":"mount-阶段","link":"#mount-阶段","children":[]},{"level":3,"title":"派发更新","slug":"派发更新","link":"#派发更新","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1688238778000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":2}]},"readingTime":{"minutes":4.98,"words":1493},"filePathRelative":"posts/vue/README.md","localizedDate":"2021年6月27日","excerpt":"<h2> vue 源码分析</h2>\\n<h3> <strong>核心</strong></h3>\\n<p>Vue 响应式的核心是利用 Object.defineProperty()这个方法进行数据劫持和观察者模式进行数据响应式的。Object.defineProperty()这个方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。具体用法如下：</p>\\n<p>​ 它有三个参数，第一个是 object，它代表要定义属性的对象。；第二个是 prop，它代表目标对象的属性值；第三个参数是 descriptor，它代表要定义或修改的属性描述符。</p>\\n<p>​ 响应式用法：</p>","autoDesc":true}');export{e as data};

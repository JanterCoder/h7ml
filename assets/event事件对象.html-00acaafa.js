import{_ as e,o as a,c as l,f as s}from"./app-2a9bb723.js";const n={},i=s(`<h1 id="javascript-event-事件对象" tabindex="-1"><a class="header-anchor" href="#javascript-event-事件对象" aria-hidden="true">#</a> JavaScript event 事件对象</h1><p>早期火狐不兼容 event 需要传参 ev</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> ev <span class="token operator">=</span> ev <span class="token operator">||</span> event<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>鼠标按下/单击：mousedown，支持 <ul><li>e.button：0 左键 1 滚轮 2 右键</li></ul></li><li>鼠标位置：鼠标事件支持 <ul><li>e.offsetX/Y：距离当前触发元素的 left/top 值</li><li>e.clientX/Y：可视区 left/top 值</li><li>e.pageX/Y：页面文档的 top/left 值</li><li>e.screenX/Y：屏幕左上角 left/top 值</li></ul></li><li>热键：keydown 支持，按下为 true <ul><li>e.shiftkey：Boolean</li><li>e.altKey：Boolean</li><li>e.ctrlKey：Boolean</li><li>e.metakey：windows ---&gt; windows 键，macos ---&gt; command 键</li></ul></li><li>键盘按下：keydown/keyup 支持 <ul><li>e.which/e.keycode：返回按下的 ascll 码值，不区分大小写</li><li>enter：13</li><li>shift：16</li><li>ctrl：17</li><li>alt：18</li><li>a：65</li><li>上下左右：37 38 39 40</li></ul></li><li>键盘按下：keypress 仅支持字符键（DOM3 被弃用） <ul><li>e.which/e.charCode：返回按下的 ascll 码值，区分大小写</li></ul></li><li>滚动 <ul><li>e.wheelDelta：chrome IE 向下 -120 向上 120</li><li>e.datail：firefox 向下 3 向上 -3</li></ul></li></ul><p>兼容:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>e<span class="token punctuation">.</span>wheelDalta <span class="token operator">?</span> e<span class="token punctuation">.</span>wheelDalta <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>datail <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// chrome是否存在 ? chrome &lt; 0 是否向下为true : firefox &lt; 0 是否向下</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),t=[i];function o(c,r){return a(),l("div",null,t)}const u=e(n,[["render",o],["__file","event事件对象.html.vue"]]);export{u as default};

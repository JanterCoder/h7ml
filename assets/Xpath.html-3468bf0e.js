import{_ as d,r as a,o as s,c as r,a as t,b as o,d as n,f as c}from"./app-2a9bb723.js";const p={},l=t("h2",{id:"xpath-语法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#xpath-语法","aria-hidden":"true"},"#"),o(" XPath 语法")],-1),i=t("hr",null,null,-1),b=t("p",null,"XPath 使用路径表达式来选取 XML 文档中的节点或节点集。节点是通过沿着路径 (path) 或者步 (steps) 来选取的。",-1),h=t("hr",null,null,-1),k={href:"https://www.runoob.com/xpath/xpath-syntax.html",target:"_blank",rel:"noopener noreferrer"},u=c(`<h2 id="xml-实例文档" tabindex="-1"><a class="header-anchor" href="#xml-实例文档" aria-hidden="true">#</a> XML 实例文档</h2><p>我们将在下面的例子中使用这个 XML 文档。</p><h2 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">?</span><span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>bookstore<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>book<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>title lang<span class="token operator">=</span><span class="token string">&quot;eng&quot;</span><span class="token operator">&gt;</span>Harry Potter<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>price<span class="token operator">&gt;</span><span class="token number">29.99</span><span class="token operator">&lt;</span><span class="token operator">/</span>price<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>book<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>book<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>title lang<span class="token operator">=</span><span class="token string">&quot;eng&quot;</span><span class="token operator">&gt;</span>Learning <span class="token constant">XML</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>price<span class="token operator">&gt;</span><span class="token number">39.95</span><span class="token operator">&lt;</span><span class="token operator">/</span>price<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>book<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>bookstore<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="选取节点" tabindex="-1"><a class="header-anchor" href="#选取节点" aria-hidden="true">#</a> 选取节点</h2><p>XPath 使用路径表达式在 XML 文档中选取节点。节点是通过沿着路径或者 step 来选取的。 下面列出了最有用的路径表达式：</p><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td><code>nodename</code></td><td>选取此节点的所有子节点。</td></tr><tr><td><code>/</code></td><td>从根节点选取（取子节点）。</td></tr><tr><td><code>//</code></td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置（取子孙节点）。</td></tr><tr><td><code>.</code></td><td>选取当前节点。</td></tr><tr><td><code>..</code></td><td>选取当前节点的父节点。</td></tr><tr><td><code>@</code></td><td>选取属性。</td></tr></tbody></table><p>在下面的表格中，我们已列出了一些路径表达式以及表达式的结果：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td><code>bookstore</code></td><td>选取 bookstore 元素的所有子节点。</td></tr><tr><td><code>/bookstore</code></td><td>选取根元素 bookstore。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！</td></tr><tr><td><code>bookstore/book</code></td><td>选取属于 bookstore 的子元素的所有 book 元素。</td></tr><tr><td><code>//book</code></td><td>选取所有 book 子元素，而不管它们在文档中的位置。</td></tr><tr><td><code>bookstore//book</code></td><td>选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。</td></tr><tr><td><code>//@lang</code></td><td>选取名为 lang 的所有属性。</td></tr></tbody></table><h2 id="谓语-predicates" tabindex="-1"><a class="header-anchor" href="#谓语-predicates" aria-hidden="true">#</a> 谓语（Predicates）</h2><p>谓语用来查找某个特定的节点或者包含某个指定的值的节点。</p><p>谓语被嵌在方括号中。</p><p>在下面的表格中，我们列出了带有谓语的一些路径表达式，以及表达式的结果：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td><code>/bookstore/book[1]</code></td><td>选取属于 bookstore 子元素的第一个 book 元素。</td></tr><tr><td><code>/bookstore/book[last()]</code></td><td>选取属于 bookstore 子元素的最后一个 book 元素。</td></tr><tr><td><code>/bookstore/book[last()-1]</code></td><td>选取属于 bookstore 子元素的倒数第二个 book 元素。</td></tr><tr><td><code>/bookstore/book[position()&lt;3]</code></td><td>选取最前面的两个属于 bookstore 元素的子元素的 book 元素。</td></tr><tr><td><code>//title[@lang]</code></td><td>选取所有拥有名为 lang 的属性的 title 元素。</td></tr><tr><td><code>//title[@lang=&#39;eng&#39;]</code></td><td>选取所有 title 元素，且这些元素拥有值为 eng 的 lang 属性。</td></tr><tr><td><code>/bookstore/book[price&gt;35.00]</code></td><td>选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。</td></tr><tr><td><code>/bookstore/book[price&gt;35.00]//title</code></td><td>选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。</td></tr></tbody></table><h2 id="选取未知节点" tabindex="-1"><a class="header-anchor" href="#选取未知节点" aria-hidden="true">#</a> 选取未知节点</h2><p>XPath 通配符可用来选取未知的 XML 元素。</p><table><thead><tr><th>通配符</th><th>描述</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配任何元素节点。</td></tr><tr><td><code>@*</code></td><td>匹配任何属性节点。</td></tr><tr><td><code>node()</code></td><td>匹配任何类型的节点。</td></tr></tbody></table><p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td><code>/bookstore/*</code></td><td>选取 bookstore 元素的所有子元素。</td></tr><tr><td><code>//*</code></td><td>选取文档中的所有元素。</td></tr><tr><td><code>//title[@*]</code></td><td>选取所有带有属性的 title 元素。</td></tr></tbody></table><h2 id="选取若干路径" tabindex="-1"><a class="header-anchor" href="#选取若干路径" aria-hidden="true">#</a> 选取若干路径</h2><p>通过在路径表达式中使用&quot;|&quot;运算符，您可以选取若干个路径。</p><p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p><p>| 路径表达式 | 结果 |<br> | ----------------------- | -------------- | ----------------------------------------------------------------------------------- |<br> | <code>//book/title</code> | <code>//book/price</code> | 选取 book 元素的所有 title 和 price 元素。 |<br> | <code>//title</code> | <code>//price</code> | 选取文档中的所有 title 和 price 元素。 |<br> | <code>/bookstore/book/title</code> | <code>//price</code> | 选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素。 |</p><h2 id="xpath-轴-axes" tabindex="-1"><a class="header-anchor" href="#xpath-轴-axes" aria-hidden="true">#</a> XPath 轴（Axes）</h2><p>轴可定义相对于当前节点的节点集。</p><table><thead><tr><th>轴名称</th><th>结果</th></tr></thead><tbody><tr><td><code>ancestor</code></td><td>选取当前节点的所有先辈（父、祖父等）。</td></tr><tr><td><code>ancestor-or-self</code></td><td>选取当前节点的所有先辈（父、祖父等）以及当前节点本身。</td></tr><tr><td><code>attribute</code></td><td>选取当前节点的所有属性。</td></tr><tr><td><code>child</code></td><td>选取当前节点的所有子元素。</td></tr><tr><td><code>descendant</code></td><td>选取当前节点的所有后代元素（子、孙等）。</td></tr><tr><td><code>descendant-or-self</code></td><td>选取当前节点的所有后代元素（子、孙等）以及当前节点本身。</td></tr><tr><td><code>following</code></td><td>选取文档中当前节点的结束标签之后的所有节点。</td></tr><tr><td><code>following-sibling</code></td><td>选取当前节点之后的所有兄弟节点</td></tr><tr><td><code>namespace</code></td><td>选取当前节点的所有命名空间节点。</td></tr><tr><td><code>parent</code></td><td>选取当前节点的父节点。</td></tr><tr><td><code>preceding</code></td><td>选取文档中当前节点的开始标签之前的所有节点。</td></tr><tr><td><code>preceding-sibling</code></td><td>选取当前节点之前的所有同级节点。</td></tr><tr><td><code>self</code></td><td>选取当前节点。</td></tr></tbody></table>`,26);function g(v,m){const e=a("ExternalLinkIcon");return s(),r("div",null,[l,i,b,h,t("p",null,[t("a",k,[o("菜鸟教程 open in new window"),n(e)])]),u])}const _=d(p,[["render",g],["__file","Xpath.html.vue"]]);export{_ as default};

const e=JSON.parse('{"key":"v-8eb0bd52","path":"/posts/javascript/professional-js.html","title":"JavaScript 高级程序设计读书笔记","lang":"zh-CN","frontmatter":{"icon":"javascript","order":1,"date":"2019-08-16T00:00:00.000Z","author":"h7ml","title":"JavaScript 高级程序设计读书笔记","category":"javascript","tag":"javascript","star":true,"description":"2. HTML 中的 JavaScript 2.1 元素 基本参数： async charset crossorigin defer integrity language type &lt;script src=\\"example.js\\" /&gt;","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/javascript/professional-js.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/javascript/professional-js.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript 高级程序设计读书笔记"}],["meta",{"property":"og:description","content":"2. HTML 中的 JavaScript 2.1 元素 基本参数： async charset crossorigin defer integrity language type &lt;script src=\\"example.js\\" /&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:published_time","content":"2019-08-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript 高级程序设计读书笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"2. HTML 中的 JavaScript","slug":"_2-html-中的-javascript","link":"#_2-html-中的-javascript","children":[{"level":3,"title":"2.1 元素","slug":"_2-1-元素","link":"#_2-1-元素","children":[]},{"level":3,"title":"2.2 内联代码与外部文件","slug":"_2-2-内联代码与外部文件","link":"#_2-2-内联代码与外部文件","children":[]},{"level":3,"title":"2.3 文档模式","slug":"_2-3-文档模式","link":"#_2-3-文档模式","children":[]},{"level":3,"title":"2.4THE <NOSCRIPT> ELEMENT","slug":"_2-4the-noscript-element","link":"#_2-4the-noscript-element","children":[]}]},{"level":2,"title":"3.语言基础","slug":"_3-语言基础","link":"#_3-语言基础","children":[{"level":3,"title":"3.1 语法","slug":"_3-1-语法","link":"#_3-1-语法","children":[]},{"level":3,"title":"3.2 关键字与保留字(Keywords and Reserved Words)","slug":"_3-2-关键字与保留字-keywords-and-reserved-words","link":"#_3-2-关键字与保留字-keywords-and-reserved-words","children":[]},{"level":3,"title":"3.3 变量","slug":"_3-3-变量","link":"#_3-3-变量","children":[]},{"level":3,"title":"3.4 数据类型","slug":"_3-4-数据类型","link":"#_3-4-数据类型","children":[]},{"level":3,"title":"3.5 操作符","slug":"_3-5-操作符","link":"#_3-5-操作符","children":[]},{"level":3,"title":"3.6 陈述(Statement)","slug":"_3-6-陈述-statement","link":"#_3-6-陈述-statement","children":[]},{"level":3,"title":"3.7 函数","slug":"_3-7-函数","link":"#_3-7-函数","children":[]}]},{"level":2,"title":"4. 变量、域与内存","slug":"_4-变量、域与内存","link":"#_4-变量、域与内存","children":[{"level":3,"title":"4.1 原始值与引用值(PRIMITIVE AND REFERENCE VALUES)","slug":"_4-1-原始值与引用值-primitive-and-reference-values","link":"#_4-1-原始值与引用值-primitive-and-reference-values","children":[]},{"level":3,"title":"4.2 执行上下文与值域(跳过)","slug":"_4-2-执行上下文与值域-跳过","link":"#_4-2-执行上下文与值域-跳过","children":[]},{"level":3,"title":"4.3 垃圾回收(GARBAGE COLLECTION)","slug":"_4-3-垃圾回收-garbage-collection","link":"#_4-3-垃圾回收-garbage-collection","children":[]}]},{"level":2,"title":"5 基本引用类型(Basic Reference Types)(快速过)","slug":"_5-基本引用类型-basic-reference-types-快速过","link":"#_5-基本引用类型-basic-reference-types-快速过","children":[{"level":3,"title":"5.1 Date 类型","slug":"_5-1-date-类型","link":"#_5-1-date-类型","children":[]},{"level":3,"title":"5.2 Regexp 类型","slug":"_5-2-regexp-类型","link":"#_5-2-regexp-类型","children":[]}]},{"level":2,"title":"6 引用类型 (Collection Reference Types)","slug":"_6-引用类型-collection-reference-types","link":"#_6-引用类型-collection-reference-types","children":[{"level":3,"title":"6.1 Object 类型","slug":"_6-1-object-类型","link":"#_6-1-object-类型","children":[]},{"level":3,"title":"6.2 Array 类型","slug":"_6-2-array-类型","link":"#_6-2-array-类型","children":[]},{"level":3,"title":"6.3 类型化数组(TYPED ARRAYS)","slug":"_6-3-类型化数组-typed-arrays","link":"#_6-3-类型化数组-typed-arrays","children":[]},{"level":3,"title":"6.4 Map 类型","slug":"_6-4-map-类型","link":"#_6-4-map-类型","children":[]},{"level":3,"title":"6.5 WeakMap 类型","slug":"_6-5-weakmap-类型","link":"#_6-5-weakmap-类型","children":[]},{"level":3,"title":"6.6 Set 类型","slug":"_6-6-set-类型","link":"#_6-6-set-类型","children":[]},{"level":3,"title":"6.7 WeakSet 类型","slug":"_6-7-weakset-类型","link":"#_6-7-weakset-类型","children":[]}]},{"level":2,"title":"8 Objects, Classes, and Object-Oriented Programming","slug":"_8-objects-classes-and-object-oriented-programming","link":"#_8-objects-classes-and-object-oriented-programming","children":[{"level":3,"title":"8.1 理解 Objects","slug":"_8-1-理解-objects","link":"#_8-1-理解-objects","children":[]},{"level":3,"title":"8.2 Object 创建","slug":"_8-2-object-创建","link":"#_8-2-object-创建","children":[]},{"level":3,"title":"8.3 继承","slug":"_8-3-继承","link":"#_8-3-继承","children":[]},{"level":3,"title":"8.4 Class","slug":"_8-4-class","link":"#_8-4-class","children":[]}]},{"level":2,"title":"10 函数","slug":"_10-函数","link":"#_10-函数","children":[{"level":3,"title":"10.1 箭头函数(Arrow Function)","slug":"_10-1-箭头函数-arrow-function","link":"#_10-1-箭头函数-arrow-function","children":[]},{"level":3,"title":"10.2 函数名","slug":"_10-2-函数名","link":"#_10-2-函数名","children":[]},{"level":3,"title":"10.3 理解 Argument","slug":"_10-3-理解-argument","link":"#_10-3-理解-argument","children":[]},{"level":3,"title":"10.4 不重载(No Overloading)","slug":"_10-4-不重载-no-overloading","link":"#_10-4-不重载-no-overloading","children":[]},{"level":3,"title":"10.5 初始参数值","slug":"_10-5-初始参数值","link":"#_10-5-初始参数值","children":[]},{"level":3,"title":"10.6 参数传递与剩余参数(SPREAD ARGUMENTS AND REST PARAMETERS)","slug":"_10-6-参数传递与剩余参数-spread-arguments-and-rest-parameters","link":"#_10-6-参数传递与剩余参数-spread-arguments-and-rest-parameters","children":[]},{"level":3,"title":"10.7 函数声明与函数表达","slug":"_10-7-函数声明与函数表达","link":"#_10-7-函数声明与函数表达","children":[]},{"level":3,"title":"10.8 函数与值","slug":"_10-8-函数与值","link":"#_10-8-函数与值","children":[]},{"level":3,"title":"10.9 函数内部","slug":"_10-9-函数内部","link":"#_10-9-函数内部","children":[]},{"level":3,"title":"10.10 函数属性与工具(FUNCTION PROPERTIES AND METHODS)","slug":"_10-10-函数属性与工具-function-properties-and-methods","link":"#_10-10-函数属性与工具-function-properties-and-methods","children":[]},{"level":3,"title":"10.11 函数表达","slug":"_10-11-函数表达","link":"#_10-11-函数表达","children":[]},{"level":3,"title":"10.12 递归","slug":"_10-12-递归","link":"#_10-12-递归","children":[]},{"level":3,"title":"10.13 尾调用优化","slug":"_10-13-尾调用优化","link":"#_10-13-尾调用优化","children":[]},{"level":3,"title":"10.14 闭包(CLOSURES)","slug":"_10-14-闭包-closures","link":"#_10-14-闭包-closures","children":[]},{"level":3,"title":"10.15 立刻调用函数表达(IMMEDIATELY INVOKED FUNCTION EXPRESSIONS)","slug":"_10-15-立刻调用函数表达-immediately-invoked-function-expressions","link":"#_10-15-立刻调用函数表达-immediately-invoked-function-expressions","children":[]},{"level":3,"title":"10.16 模块模式","slug":"_10-16-模块模式","link":"#_10-16-模块模式","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":34.06,"words":10219},"filePathRelative":"posts/javascript/professional-js.md","localizedDate":"2019年8月16日","excerpt":"<h2> 2. HTML 中的 JavaScript</h2>\\n<h3> 2.1 元素</h3>\\n<p>基本参数：</p>\\n<ul>\\n<li>async</li>\\n<li>charset</li>\\n<li>crossorigin</li>\\n<li>defer</li>\\n<li>integrity</li>\\n<li>language</li>\\n<li>type</li>\\n</ul>\\n<div class=\\"language-html line-numbers-mode\\" data-ext=\\"html\\"><pre class=\\"language-html\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">src</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>example.js<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};

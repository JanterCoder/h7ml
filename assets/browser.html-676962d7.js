const e=JSON.parse('{"key":"v-49a71a26","path":"/posts/browser.html","title":"浏览器知识","lang":"zh-CN","frontmatter":{"icon":"chrome","order":1,"date":"2022-03-20T00:00:00.000Z","author":"h7ml","category":"es6","tag":"es6","title":"浏览器知识","star":true,"description":"跨域 跨域的原因 —— 浏览器的同源策略 同源策略是浏览器一个重要的安全策略，它用于限制一个 origin 的文档或者它加载的脚本如何能与另一个源的资源进行交互。它能帮助阻隔恶意文档，减少可能被攻击的媒介 同源的定义是两个 URL 的 协议、域名(子域名 + 主域名)、端口号 都相同，否则就会出现跨域","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/browser.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/browser.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"浏览器知识"}],["meta",{"property":"og:description","content":"跨域 跨域的原因 —— 浏览器的同源策略 同源策略是浏览器一个重要的安全策略，它用于限制一个 origin 的文档或者它加载的脚本如何能与另一个源的资源进行交互。它能帮助阻隔恶意文档，减少可能被攻击的媒介 同源的定义是两个 URL 的 协议、域名(子域名 + 主域名)、端口号 都相同，否则就会出现跨域"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"es6"}],["meta",{"property":"article:published_time","content":"2022-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浏览器知识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"跨域","slug":"跨域","link":"#跨域","children":[{"level":3,"title":"常用的跨域解决方案","slug":"常用的跨域解决方案","link":"#常用的跨域解决方案","children":[]},{"level":3,"title":"CORS 跨源资源共享","slug":"cors-跨源资源共享","link":"#cors-跨源资源共享","children":[]}]},{"level":2,"title":"浏览器缓存机制","slug":"浏览器缓存机制","link":"#浏览器缓存机制","children":[{"level":3,"title":"强缓存（200 OK）","slug":"强缓存-200-ok","link":"#强缓存-200-ok","children":[]},{"level":3,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]},{"level":3,"title":"用户行为对缓存的影响","slug":"用户行为对缓存的影响","link":"#用户行为对缓存的影响","children":[]}]},{"level":2,"title":"浏览器存储","slug":"浏览器存储","link":"#浏览器存储","children":[{"level":3,"title":"Cookie","slug":"cookie","link":"#cookie","children":[]},{"level":3,"title":"Web Storage","slug":"web-storage","link":"#web-storage","children":[]},{"level":3,"title":"IndexedDB","slug":"indexeddb","link":"#indexeddb","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":14.65,"words":4396},"filePathRelative":"posts/browser.md","localizedDate":"2022年3月20日","excerpt":"<h2> 跨域</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">跨域的原因 —— 浏览器的同源策略</p>\\n<p><a href=\\"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">同源策略</a>是浏览器一个重要的安全策略，它用于限制一个 <code>origin</code> 的文档或者它加载的脚本如何能与另一个源的资源进行交互。它能帮助阻隔恶意文档，减少可能被攻击的媒介</p>\\n<p>同源的定义是两个 <code>URL</code> 的 <strong>协议</strong>、<strong>域名</strong>(子域名 + 主域名)、<strong>端口号</strong> 都相同，否则就会出现跨域</p>\\n</div>","autoDesc":true}');export{e as data};

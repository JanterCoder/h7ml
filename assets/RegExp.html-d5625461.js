const e=JSON.parse('{"key":"v-1863b62d","path":"/posts/javascript/types/RegExp.html","title":"JavaScript RegExp 正则表达式对象-数据类型","lang":"zh-CN","frontmatter":{"description":"JavaScript RegExp 正则表达式对象-数据类型 修饰符 g：全局模式，表示查找字符串的全部内容，而不是找到第一个匹配的内容就结束。 i：不区分大小写，表示在查找匹配时忽略 pattern 和字符串的大小写。 m：多行模式，表示查找到一行文本末尾时会继续查找。 y：粘附模式，表示只查找从 lastIndex 开始及之后的字符串。 u：Unicode 模式，启用 Unicode 匹配。 s：dotAll 模式，表示元字符,匹配任何字符（包括\\\\n 或\\\\r）。","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/javascript/types/RegExp.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/javascript/types/RegExp.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript RegExp 正则表达式对象-数据类型"}],["meta",{"property":"og:description","content":"JavaScript RegExp 正则表达式对象-数据类型 修饰符 g：全局模式，表示查找字符串的全部内容，而不是找到第一个匹配的内容就结束。 i：不区分大小写，表示在查找匹配时忽略 pattern 和字符串的大小写。 m：多行模式，表示查找到一行文本末尾时会继续查找。 y：粘附模式，表示只查找从 lastIndex 开始及之后的字符串。 u：Unicode 模式，启用 Unicode 匹配。 s：dotAll 模式，表示元字符,匹配任何字符（包括\\\\n 或\\\\r）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript RegExp 正则表达式对象-数据类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\",\\"url\\":\\"https://www.h7ml.cn\\"}]}"]]},"headers":[{"level":2,"title":"实例属性","slug":"实例属性","link":"#实例属性","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"test()","slug":"test","link":"#test","children":[]},{"level":3,"title":"macth()","slug":"macth","link":"#macth","children":[]},{"level":3,"title":"exec()","slug":"exec","link":"#exec","children":[]},{"level":3,"title":"正则预查询","slug":"正则预查询","link":"#正则预查询","children":[]}]},{"level":2,"title":"元字符","slug":"元字符","link":"#元字符","children":[]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":4.36,"words":1308},"filePathRelative":"posts/javascript/types/RegExp.md","localizedDate":"2023年5月3日","excerpt":"<h1> JavaScript RegExp 正则表达式对象-数据类型</h1>\\n<p>修饰符</p>\\n<ul>\\n<li>g：全局模式，表示查找字符串的全部内容，而不是找到第一个匹配的内容就结束。</li>\\n<li>i：不区分大小写，表示在查找匹配时忽略 pattern 和字符串的大小写。</li>\\n<li>m：多行模式，表示查找到一行文本末尾时会继续查找。</li>\\n<li>y：粘附模式，表示只查找从 lastIndex 开始及之后的字符串。</li>\\n<li>u：Unicode 模式，启用 Unicode 匹配。</li>\\n<li>s：dotAll 模式，表示元字符,匹配任何字符（包括\\\\n 或\\\\r）。</li>\\n</ul>","autoDesc":true}');export{e as data};

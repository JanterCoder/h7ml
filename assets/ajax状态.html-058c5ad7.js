import{_ as n,o as a,c as s,f as t}from"./app-2a9bb723.js";const e={},p=t(`<h1 id="javascript-ajax-状态码、json-对象、http-状态码" tabindex="-1"><a class="header-anchor" href="#javascript-ajax-状态码、json-对象、http-状态码" aria-hidden="true">#</a> JavaScript ajax 状态码、json 对象、http 状态码</h1><h2 id="readystate" tabindex="-1"><a class="header-anchor" href="#readystate" aria-hidden="true">#</a> readyState</h2><ul><li>open：之前是 0</li><li>send：发送请求之后是 1</li><li>send：方法完成，已经接受到所有的响应内容 2</li><li>正在解析下载到的数据 3</li><li>解析完成 4</li></ul><h2 id="state-http-常见状态码" tabindex="-1"><a class="header-anchor" href="#state-http-常见状态码" aria-hidden="true">#</a> State HTTP 常见状态码</h2><ul><li>200：交易成功</li><li>301：永久重定向</li><li>302：临时重定向</li><li>304：使用缓存文件</li><li>400：错误请求，如语法错误</li><li>404：没有发现文件、查询或 URl</li><li>405：请求方式错误</li><li>500：后端错误</li><li>1**：请求收到，继续处理</li><li>2**：操作成功收到，分析、接受</li><li>3**：完成此请求必须进一步处理</li><li>4**：请求包含一个错误语法或不能完成</li><li>5**：服务器执行一个完全有效请求失败</li></ul><h2 id="json-对象" tabindex="-1"><a class="header-anchor" href="#json-对象" aria-hidden="true">#</a> json 对象</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// josn字符串转为数据结构</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 数据结构转为字符串</span>
<span class="token function">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将具有 js 格式的字符串转换为 js 执行，可以转换除了 json 以外的任意 js 字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组深拷贝" tabindex="-1"><a class="header-anchor" href="#数组深拷贝" aria-hidden="true">#</a> 数组深拷贝</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> obj<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;rypy&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj1<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&quot;rypy1&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &quot;rypy&quot;, age: 20}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &quot;rypy1&quot;, age: 20}</span>

php 实现
echo <span class="token function">json_decode</span><span class="token punctuation">(</span>$arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// josn字符串 =&gt; 数据结构</span>
echo <span class="token function">json_encode</span><span class="token punctuation">(</span>$arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 数据结构  =&gt; 字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[p];function c(i,l){return a(),s("div",null,o)}const r=n(e,[["render",c],["__file","ajax状态.html.vue"]]);export{r as default};

const e=JSON.parse('{"key":"v-70227098","path":"/posts/rxjava/thread-scheduling.html","title":"Rxjava的线程调度","lang":"zh-CN","frontmatter":{"title":"Rxjava的线程调度","icon":"creative","date":"2019-03-29T00:00:00.000Z","author":"h7ml","category":"android","tag":"rxjava","description":"调度器 用于线程调度 使用案例 Observable.create(new Observable.OnSubscribe&lt;String&gt;() { @Override public void call(Subscriber&lt;? super String&gt; subscriber) { System.out.println(\\"正在进行耗时操作\\"); subscriber.onNext(\\"执行耗时操作后的结果\\"); subscriber.onCompleted(); } }) .subscribeOn(Schedulers.io()) //让被观察者执行在IO线程 .observeOn(AndroidSchedulers.mainThread()) //让观察者执行在主线程 .subscribe(...);","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/rxjava/thread-scheduling.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/rxjava/thread-scheduling.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"Rxjava的线程调度"}],["meta",{"property":"og:description","content":"调度器 用于线程调度 使用案例 Observable.create(new Observable.OnSubscribe&lt;String&gt;() { @Override public void call(Subscriber&lt;? super String&gt; subscriber) { System.out.println(\\"正在进行耗时操作\\"); subscriber.onNext(\\"执行耗时操作后的结果\\"); subscriber.onCompleted(); } }) .subscribeOn(Schedulers.io()) //让被观察者执行在IO线程 .observeOn(AndroidSchedulers.mainThread()) //让观察者执行在主线程 .subscribe(...);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"rxjava"}],["meta",{"property":"article:published_time","content":"2019-03-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Rxjava的线程调度\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":3,"title":"调度器","slug":"调度器","link":"#调度器","children":[]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":1.87,"words":562},"filePathRelative":"posts/rxjava/thread-scheduling.md","localizedDate":"2019年3月29日","excerpt":"<h3> 调度器</h3>\\n<p>用于线程调度</p>\\n<h4> 使用案例</h4>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>Observable.create(new Observable.OnSubscribe&lt;String&gt;() {\\n\\n @Override\\n public void call(Subscriber&lt;? super String&gt; subscriber) {\\n  System.out.println(\\"正在进行耗时操作\\");\\n  subscriber.onNext(\\"执行耗时操作后的结果\\");\\n  subscriber.onCompleted();\\n }\\n})\\n.subscribeOn(Schedulers.io())    //让被观察者执行在IO线程\\n.observeOn(AndroidSchedulers.mainThread()) //让观察者执行在主线程\\n.subscribe(...);\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};

const e=JSON.parse('{"key":"v-8be7ced4","path":"/posts/javascript/media/video.html","title":"JavaScript video 视频 API","lang":"zh-CN","frontmatter":{"description":"JavaScript video 视频 API 标签属性 src：要播放的音频/视频的 URL。 controls：显示音频/视频播放控件 loop：音频/视频结束后重新播放 muted：音频/视频静音 width：播放区宽度 height：播放区高度 poster：预览图片 属性 audioTracks：返回可用音频轨道的 Audio TrackList 对象 autoplay：设置/返回是否在加载完成后播放视频/音频 buffered：返回音频/视频已缓存部分的 timeRanges 对象 controller：返回音频/视频当前媒体控制器的 MediaController 对象 controls：设置/返回音频/视频是否显示控件 crossOrigin：设置/返回音频/视频的 CORS 设置 curretSrc：返回当前音频/视频的 URL currentTime：设置/返回音频/视频中当前播放位置（以秒） defaultMuted：设置/返回音频/视频默认是否静音 defaultPlaybackRate：设置/返回音频/视频的默认播放速度 duration：返回当前音频/视频的长度 s ended：返回音频/视频是否播放结束 error：返回音频/视频发生错误状态的 MediaError 对象 loop：设置/返回是否应在结束时重新播放 mediaGroup：设置/返回音频/视频所属的组合 muted：设置/返回是否静音 networkState：返回当前音频/视频网络状态 paused：设置/返回是否暂停 playbackRate：设置/返回音频/视频播放速度 palyed：返回音频/视频已播放部分 TimeRanges 对象 repload：设置/返回是否在页面加载后加载 readyState：返回音频/视频当前的就绪状态 seekable：返回音频/视频可寻址部分的 TimeRanges 对象 seeking：返回用户是否在音频/视频中进行查找 src：设置/返回当前来源 startDate：返回当前时间偏移的 date 对象 textTracks：返回可用文本轨道的 TextTrackList 对象 videoTracks:返回可用视频轨道的 VideoTrackList 对象 volume:设置/返回音量","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/javascript/media/video.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/javascript/media/video.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript video 视频 API"}],["meta",{"property":"og:description","content":"JavaScript video 视频 API 标签属性 src：要播放的音频/视频的 URL。 controls：显示音频/视频播放控件 loop：音频/视频结束后重新播放 muted：音频/视频静音 width：播放区宽度 height：播放区高度 poster：预览图片 属性 audioTracks：返回可用音频轨道的 Audio TrackList 对象 autoplay：设置/返回是否在加载完成后播放视频/音频 buffered：返回音频/视频已缓存部分的 timeRanges 对象 controller：返回音频/视频当前媒体控制器的 MediaController 对象 controls：设置/返回音频/视频是否显示控件 crossOrigin：设置/返回音频/视频的 CORS 设置 curretSrc：返回当前音频/视频的 URL currentTime：设置/返回音频/视频中当前播放位置（以秒） defaultMuted：设置/返回音频/视频默认是否静音 defaultPlaybackRate：设置/返回音频/视频的默认播放速度 duration：返回当前音频/视频的长度 s ended：返回音频/视频是否播放结束 error：返回音频/视频发生错误状态的 MediaError 对象 loop：设置/返回是否应在结束时重新播放 mediaGroup：设置/返回音频/视频所属的组合 muted：设置/返回是否静音 networkState：返回当前音频/视频网络状态 paused：设置/返回是否暂停 playbackRate：设置/返回音频/视频播放速度 palyed：返回音频/视频已播放部分 TimeRanges 对象 repload：设置/返回是否在页面加载后加载 readyState：返回音频/视频当前的就绪状态 seekable：返回音频/视频可寻址部分的 TimeRanges 对象 seeking：返回用户是否在音频/视频中进行查找 src：设置/返回当前来源 startDate：返回当前时间偏移的 date 对象 textTracks：返回可用文本轨道的 TextTrackList 对象 videoTracks:返回可用视频轨道的 VideoTrackList 对象 volume:设置/返回音量"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript video 视频 API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\",\\"url\\":\\"https://www.h7ml.cn\\"}]}"]]},"headers":[{"level":2,"title":"标签属性","slug":"标签属性","link":"#标签属性","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":2,"title":"事件","slug":"事件","link":"#事件","children":[]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":3.18,"words":955},"filePathRelative":"posts/javascript/media/video.md","localizedDate":"2023年5月3日","excerpt":"<h1> JavaScript video 视频 API</h1>\\n<h2> 标签属性</h2>\\n<ul>\\n<li>src：要播放的音频/视频的 URL。</li>\\n<li>controls：显示音频/视频播放控件</li>\\n<li>loop：音频/视频结束后重新播放</li>\\n<li>muted：音频/视频静音</li>\\n<li>width：播放区宽度</li>\\n<li>height：播放区高度</li>\\n<li>poster：预览图片</li>\\n</ul>\\n<h2> 属性</h2>\\n<ul>\\n<li>audioTracks：返回可用音频轨道的 Audio TrackList 对象</li>\\n<li>autoplay：设置/返回是否在加载完成后播放视频/音频</li>\\n<li>buffered：返回音频/视频已缓存部分的 timeRanges 对象</li>\\n<li>controller：返回音频/视频当前媒体控制器的 MediaController 对象</li>\\n<li>controls：设置/返回音频/视频是否显示控件</li>\\n<li>crossOrigin：设置/返回音频/视频的 CORS 设置</li>\\n<li>curretSrc：返回当前音频/视频的 URL</li>\\n<li>currentTime：设置/返回音频/视频中当前播放位置（以秒）</li>\\n<li>defaultMuted：设置/返回音频/视频默认是否静音</li>\\n<li>defaultPlaybackRate：设置/返回音频/视频的默认播放速度</li>\\n<li>duration：返回当前音频/视频的长度 s</li>\\n<li>ended：返回音频/视频是否播放结束</li>\\n<li>error：返回音频/视频发生错误状态的 MediaError 对象</li>\\n<li>loop：设置/返回是否应在结束时重新播放</li>\\n<li>mediaGroup：设置/返回音频/视频所属的组合</li>\\n<li>muted：设置/返回是否静音</li>\\n<li>networkState：返回当前音频/视频网络状态</li>\\n<li>paused：设置/返回是否暂停</li>\\n<li>playbackRate：设置/返回音频/视频播放速度</li>\\n<li>palyed：返回音频/视频已播放部分 TimeRanges 对象</li>\\n<li>repload：设置/返回是否在页面加载后加载</li>\\n<li>readyState：返回音频/视频当前的就绪状态</li>\\n<li>seekable：返回音频/视频可寻址部分的 TimeRanges 对象</li>\\n<li>seeking：返回用户是否在音频/视频中进行查找</li>\\n<li>src：设置/返回当前来源</li>\\n<li>startDate：返回当前时间偏移的 date 对象</li>\\n<li>textTracks：返回可用文本轨道的 TextTrackList 对象</li>\\n<li>videoTracks:返回可用视频轨道的 VideoTrackList 对象</li>\\n<li>volume:设置/返回音量</li>\\n</ul>","autoDesc":true}');export{e as data};

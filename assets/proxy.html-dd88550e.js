const e=JSON.parse('{"key":"v-e9d78496","path":"/posts/nginx/proxy.html","title":"反向代理与负载均衡","lang":"zh-CN","frontmatter":{"icon":"nginx","order":4,"date":"2022-03-20T00:00:00.000Z","author":"h7ml","category":"nginx","tag":"nginx","title":"反向代理与负载均衡","description":"反向代理与负载均衡 反向代理 当用户不能直接访问应用服务器时候，这时候就通过Nginx去带着你的参数去访问应用服务器，之后在把数据返回给网关（路由器），在由网关把数据传输到用户。 image-20220909155253447","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/nginx/proxy.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/nginx/proxy.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"反向代理与负载均衡"}],["meta",{"property":"og:description","content":"反向代理与负载均衡 反向代理 当用户不能直接访问应用服务器时候，这时候就通过Nginx去带着你的参数去访问应用服务器，之后在把数据返回给网关（路由器），在由网关把数据传输到用户。 image-20220909155253447"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:published_time","content":"2022-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反向代理与负载均衡\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"反向代理与负载均衡","slug":"反向代理与负载均衡","link":"#反向代理与负载均衡","children":[]},{"level":2,"title":"反向代理","slug":"反向代理","link":"#反向代理","children":[]},{"level":2,"title":"正向代理","slug":"正向代理","link":"#正向代理","children":[]},{"level":2,"title":"传统公司系统架构","slug":"传统公司系统架构","link":"#传统公司系统架构","children":[]},{"level":2,"title":"反向代理设置","slug":"反向代理设置","link":"#反向代理设置","children":[]},{"level":2,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[{"level":3,"title":"什么是负载均衡","slug":"什么是负载均衡","link":"#什么是负载均衡","children":[]},{"level":3,"title":"基于反向代理的负载均衡","slug":"基于反向代理的负载均衡","link":"#基于反向代理的负载均衡","children":[]}]},{"level":2,"title":"负载均衡策略","slug":"负载均衡策略","link":"#负载均衡策略","children":[{"level":3,"title":"轮询","slug":"轮询","link":"#轮询","children":[]},{"level":3,"title":"weight(权重)","slug":"weight-权重","link":"#weight-权重","children":[]},{"level":3,"title":"ip_hash","slug":"ip-hash","link":"#ip-hash","children":[]},{"level":3,"title":"least_conn","slug":"least-conn","link":"#least-conn","children":[]},{"level":3,"title":"url_hash","slug":"url-hash","link":"#url-hash","children":[]},{"level":3,"title":"fair","slug":"fair","link":"#fair","children":[]},{"level":3,"title":"动静分离","slug":"动静分离","link":"#动静分离","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":4.69,"words":1406},"filePathRelative":"posts/nginx/proxy.md","localizedDate":"2022年3月20日","excerpt":"<h2> 反向代理与负载均衡</h2>\\n<h2> 反向代理</h2>\\n<p>当用户不能直接访问应用服务器时候，这时候就通过<code>Nginx</code>去带着你的参数去访问应用服务器，之后在把数据返回给网关（路由器），在由网关把数据传输到用户。</p>\\n<figure><img src=\\"https://static.h7ml.cn/vitepress/assets/images/nginx/image-20220909155253447.png\\" alt=\\"image-20220909155253447\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20220909155253447</figcaption></figure>","autoDesc":true}');export{e as data};

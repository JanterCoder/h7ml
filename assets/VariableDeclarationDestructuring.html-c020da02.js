const t=JSON.parse(`{"key":"v-709aa7aa","path":"/posts/ecmascript/VariableDeclarationDestructuring.html","title":"JavaScript ES6 let、cont、解构","lang":"zh-CN","frontmatter":{"description":"JavaScript ES6 let、cont、解构 let 和 const 遇到 {} 就形成作用域 同一作用域不能重复声明变量或函数 [如：let 声明过不能用 const 和 var 声明相同名字] 没有变量提升 const 必须初始化赋值，不能被修改，而 let 声明的变量不用 const 定义的对象或者数组，其实是可变的。 可以修改添加属性 const car = { color: 'white' }; car.color = 'red'; // 修改属性: car.owner = 'Johnson'; // 添加属性","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/ecmascript/VariableDeclarationDestructuring.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/ecmascript/VariableDeclarationDestructuring.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript ES6 let、cont、解构"}],["meta",{"property":"og:description","content":"JavaScript ES6 let、cont、解构 let 和 const 遇到 {} 就形成作用域 同一作用域不能重复声明变量或函数 [如：let 声明过不能用 const 和 var 声明相同名字] 没有变量提升 const 必须初始化赋值，不能被修改，而 let 声明的变量不用 const 定义的对象或者数组，其实是可变的。 可以修改添加属性 const car = { color: 'white' }; car.color = 'red'; // 修改属性: car.owner = 'Johnson'; // 添加属性"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript ES6 let、cont、解构\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\",\\"url\\":\\"https://www.h7ml.cn\\"}]}"]]},"headers":[{"level":2,"title":"let 和 const","slug":"let-和-const","link":"#let-和-const","children":[]},{"level":2,"title":"解构","slug":"解构","link":"#解构","children":[{"level":3,"title":"运用","slug":"运用","link":"#运用","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":1.77,"words":532},"filePathRelative":"posts/ecmascript/VariableDeclarationDestructuring.md","localizedDate":"2023年5月3日","excerpt":"<h1> JavaScript ES6 let、cont、解构</h1>\\n<h2> let 和 const</h2>\\n<ol>\\n<li>遇到 {} 就形成作用域</li>\\n<li>同一作用域不能重复声明变量或函数 [如：let 声明过不能用 const 和 var 声明相同名字]</li>\\n<li>没有变量提升</li>\\n<li>const 必须初始化赋值，不能被修改，而 let 声明的变量不用</li>\\n<li>const 定义的对象或者数组，其实是可变的。</li>\\n</ol>\\n<ul>\\n<li>可以修改添加属性</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> car <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">color</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'white'</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\ncar<span class=\\"token punctuation\\">.</span>color <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'red'</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 修改属性:</span>\\ncar<span class=\\"token punctuation\\">.</span>owner <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Johnson'</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 添加属性</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};

const e=JSON.parse(`{"key":"v-8903c10e","path":"/posts/fullStackTale/Database.html","title":"使用 Node.js 连接多种类型数据库","lang":"zh-CN","frontmatter":{"icon":"mysql","description":"本文介绍了如何使用 Node.js 连接多种不同类型的数据库，包括 MySQL、MongoDB、PostgreSQL、Oracle、Microsoft SQL Server、Redis、SQLite、Couchbase、Cassandra、Neo4j、ArangoDB、RethinkDB、CouchDB、Firebase 和 MariaDB，并提供了相应的示例代码和依赖包安装步骤。","footer":"<a href='https://beian.mit.gov.cn/' target='blank'>浙ICP备2021037683号-2</a>在 Node.js 中连接 MySQL、MongoDB 和 PostgreSQL","order":3,"star":3,"date":"2024-04-10T00:00:00.000Z","author":"h7ml","image":"https://www.h7ml.cn/logo.png","banner":"https://www.h7ml.cn/logo.png","category":["Node.js","MySQL","MongoDB","PostgreSQL"],"tag":["数据库连接","Node.js"],"shortTitle":"使用 Node.js 连接多种类型数据库","head":[["meta",{"name":"keywords","content":"数据库, Node.js, MySQL, MongoDB, PostgreSQL, Oracle, Microsoft SQL Server, Redis, SQLite, Couchbase, Cassandra, Neo4j, ArangoDB, RethinkDB, CouchDB, Firebase, 示例代码, 依赖包, 配置文件, 环境变量"}],["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/fullStackTale/Database.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/fullStackTale/Database.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"使用 Node.js 连接多种类型数据库"}],["meta",{"property":"og:description","content":"本文介绍了如何使用 Node.js 连接多种不同类型的数据库，包括 MySQL、MongoDB、PostgreSQL、Oracle、Microsoft SQL Server、Redis、SQLite、Couchbase、Cassandra、Neo4j、ArangoDB、RethinkDB、CouchDB、Firebase 和 MariaDB，并提供了相应的示例代码和依赖包安装步骤。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.h7ml.cn/logo.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"使用 Node.js 连接多种类型数据库"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"数据库连接"}],["meta",{"property":"article:tag","content":"Node.js"}],["meta",{"property":"article:published_time","content":"2024-04-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Node.js 连接多种类型数据库\\",\\"image\\":[\\"https://www.h7ml.cn/logo.png\\"],\\"datePublished\\":\\"2024-04-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"关系对比","slug":"关系对比","link":"#关系对比","children":[]},{"level":2,"title":"typeorm","slug":"typeorm","link":"#typeorm","children":[{"level":3,"title":"TypeORM 具有以下特点：","slug":"typeorm-具有以下特点","link":"#typeorm-具有以下特点","children":[]}]},{"level":2,"title":"安装 TypeORM","slug":"安装-typeorm","link":"#安装-typeorm","children":[]},{"level":2,"title":"使用 typeorm 封装通用连接方法","slug":"使用-typeorm-封装通用连接方法","link":"#使用-typeorm-封装通用连接方法","children":[]},{"level":2,"title":"对应不同数据库的连接方法","slug":"对应不同数据库的连接方法","link":"#对应不同数据库的连接方法","children":[{"level":3,"title":"MySQL","slug":"mysql","link":"#mysql","children":[]},{"level":3,"title":"MongoDB","slug":"mongodb","link":"#mongodb","children":[]},{"level":3,"title":"PostgreSQL","slug":"postgresql","link":"#postgresql","children":[]},{"level":3,"title":"Oracle","slug":"oracle","link":"#oracle","children":[]},{"level":3,"title":"Microsoft SQL Server","slug":"microsoft-sql-server","link":"#microsoft-sql-server","children":[]},{"level":3,"title":"Redis","slug":"redis","link":"#redis","children":[]},{"level":3,"title":"SQLite","slug":"sqlite","link":"#sqlite","children":[]},{"level":3,"title":"Couchbase","slug":"couchbase","link":"#couchbase","children":[]},{"level":3,"title":"Cassandra","slug":"cassandra","link":"#cassandra","children":[]},{"level":3,"title":"Neo4j","slug":"neo4j","link":"#neo4j","children":[]},{"level":3,"title":"ArangoDB","slug":"arangodb","link":"#arangodb","children":[]},{"level":3,"title":"RethinkDB","slug":"rethinkdb","link":"#rethinkdb","children":[]},{"level":3,"title":"CouchDB","slug":"couchdb","link":"#couchdb","children":[]},{"level":3,"title":"Firebase","slug":"firebase","link":"#firebase","children":[]},{"level":3,"title":"MariaDB","slug":"mariadb","link":"#mariadb","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":12.98,"words":3895},"filePathRelative":"posts/fullStackTale/Database.md","localizedDate":"2024年4月10日","excerpt":"<h1> 使用 Node.js 连接多种类型数据库</h1>\\n<h2> 关系对比</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>数据库</th>\\n<th>驱动/模块</th>\\n<th>连接方式</th>\\n<th>优缺点</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>MariaDB</td>\\n<td>mariadb</td>\\n<td>使用 <code>mariadb.createConnection()</code> 创建连接，或者使用 <code>mariadb.createPool()</code> 创建连接池</td>\\n<td>MariaDB 是 MySQL 的一个分支，与 MySQL 兼容。驱动程序相对较新，但已受到广泛认可和广泛使用。</td>\\n</tr>\\n<tr>\\n<td>MongoDB</td>\\n<td>mongodb</td>\\n<td>使用 <code>mongodb.MongoClient.connect()</code> 创建连接</td>\\n<td>MongoDB 是一个面向文档的 NoSQL 数据库，具有可伸缩性、灵活性和高速读写等特点。MongoDB Node.js 驱动程序是官方支持的，并且易于使用。</td>\\n</tr>\\n<tr>\\n<td>PostgreSQL</td>\\n<td>pg</td>\\n<td>使用 <code>new pg.Client()</code> 创建连接</td>\\n<td>PostgreSQL 是一个功能强大的关系型数据库，具有高度的稳定性和可靠性。pg 驱动程序是 Node.js 中最流行的 PostgreSQL 驱动程序之一。</td>\\n</tr>\\n<tr>\\n<td>Oracle</td>\\n<td>oracledb</td>\\n<td>使用 <code>oracledb.getConnection()</code> 创建连接</td>\\n<td>Oracle 是一个功能强大的关系型数据库，主要用于企业级应用程序。oracledb 驱动程序是官方支持的，并且具有很好的性能和可靠性。</td>\\n</tr>\\n<tr>\\n<td>Microsoft SQL Server</td>\\n<td>mssql</td>\\n<td>使用 <code>new mssql.ConnectionPool()</code> 创建连接池</td>\\n<td>Microsoft SQL Server 是一个功能强大的关系型数据库，主要用于企业级应用程序。mssql 驱动程序是 Node.js 中最流行的 Microsoft SQL Server 驱动程序之一。</td>\\n</tr>\\n<tr>\\n<td>Redis</td>\\n<td>ioredis</td>\\n<td>使用 <code>new Redis()</code> 创建连接</td>\\n<td>Redis 是一个内存数据结构存储系统，适用于需要快速读写和高并发的应用程序。ioredis 是一个支持 Redis 集群和复制功能的 Redis 驱动程序。</td>\\n</tr>\\n<tr>\\n<td>SQLite</td>\\n<td>better-sqlite3</td>\\n<td>使用 <code>better-sqlite3()</code> 创建连接</td>\\n<td>SQLite 是一个非常轻量级的嵌入式数据库，适用于小型项目。better-sqlite3 是官方 SQLite3 驱动程序的代替品，速度更快且易于使用。</td>\\n</tr>\\n<tr>\\n<td>Couchbase</td>\\n<td>couchbase</td>\\n<td>使用 <code>new couchbase.Cluster()</code> 创建连接</td>\\n<td>Couchbase 是一个面向文档的 NoSQL 数据库，适用于需要快速读写和高并发的应用程序。couchbase 驱动程序是官方支持的，并且具有很好的性能和可靠性。</td>\\n</tr>\\n<tr>\\n<td>Cassandra</td>\\n<td>cassandra-driver</td>\\n<td>使用 <code>new cassandra.Client()</code> 创建连接</td>\\n<td>Cassandra 是一个分布式的 NoSQL 数据库，适用于大规模数据存储和处理。cassandra-driver 是官方支持的驱动程序，并具有很好的性能和可靠性。</td>\\n</tr>\\n<tr>\\n<td>Neo4j</td>\\n<td>neo4j-driver</td>\\n<td>使用 <code>neo4j.driver()</code> 创建连接</td>\\n<td>Neo4j 是一个图形数据库，适用于需要处理高度连接数据的应用程序。neo4j-driver 是官方支持的 Node.js 驱动程序，并且易于使用。</td>\\n</tr>\\n<tr>\\n<td>ArangoDB</td>\\n<td>arangojs</td>\\n<td>使用 <code>new arangojs.Database()</code> 创建连接</td>\\n<td>ArangoDB 是一个多模型数据库（支持文档、图形和键值数据），适用于需要存储多种类型数据的应用程序。ArangoJS 是一个用于 Node.js 的 ArangoDB 驱动程序。</td>\\n</tr>\\n<tr>\\n<td>RethinkDB</td>\\n<td>rethinkdbdash</td>\\n<td>使用 <code>rethinkdbdash()</code> 创建连接</td>\\n<td>RethinkDB 是一个面向文档的 NoSQL 数据库，具有实时更新和可伸缩性等功能。它可以使用 RethinkDB 驱动程序或 rethinkdbdash。</td>\\n</tr>\\n</tbody>\\n</table>"}`);export{e as data};

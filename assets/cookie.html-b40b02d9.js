import{_ as p,r as e,o,c,a as n,b as s,d as i,f as a}from"./app-2a9bb723.js";const u={},l=a(`<h1 id="javascript-cookie" tabindex="-1"><a class="header-anchor" href="#javascript-cookie" aria-hidden="true">#</a> JavaScript cookie</h1><h2 id="存储格式" tabindex="-1"><a class="header-anchor" href="#存储格式" aria-hidden="true">#</a> 存储格式</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>name<span class="token operator">=</span>value<span class="token punctuation">;</span><span class="token punctuation">[</span>expires<span class="token operator">=</span>date<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">[</span>path<span class="token operator">=</span>path<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">[</span>domain<span class="token operator">=</span>somewhere<span class="token punctuation">.</span>com<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">[</span>secure<span class="token punctuation">]</span>，
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>键 = 值; 后续中括号的内容，都是可选项。</p><p>火狐支持缓存 cookie，谷歌只支持服务器缓存 cookie</p><ul><li>[expires=date]：&#39;expires=过期时间&#39;</li><li>[path=path]：设置的 cookie 的路径 <ul><li>如果不设置，默认是加载当前.html 文件的路径</li><li>设置的 cookie 的路径，和加载当前文件的路径，必须一致，如果不一致，cookie 访问失败。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;username=xxx;path=&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;/code14/cookie&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 可以访问当前与html同一路径</span>
<span class="token string">&#39;username=xxx;path=&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;/code14/cookie/111&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 设置其他路径后 不能访问</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,7),r={href:"http://domain=somewhere.com",target:"_blank",rel:"noopener noreferrer"},k=n("ul",null,[n("li",null,"如果不去设置，默认是加载当前 .html 文件的服务器域名 /ip"),n("li",null,"如果加载当前文件域名和设置的域名不一致，设置 cookie 失败。不能设置")],-1),d=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;username=xxx;domain=&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;localhostxxx&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 设置失败</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>secure <ul><li>如果不设置，设置 cookie，可以通过 http/https 协议加载文件设置</li><li>设置字段后，只能 https 协议加载 cookie.</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;username=xxx;secure&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="获取-cookie" tabindex="-1"><a class="header-anchor" href="#获取-cookie" aria-hidden="true">#</a> 获取 cookie</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="设置-cookie" tabindex="-1"><a class="header-anchor" href="#设置-cookie" aria-hidden="true">#</a> 设置 cookie</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;username=xxx&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="转码储存" tabindex="-1"><a class="header-anchor" href="#转码储存" aria-hidden="true">#</a> 转码储存</h2><ul><li>encodeURIComponent()：将中文编译成对应的字符</li><li>decodeURIComponent()：将对应的字符编译成中文</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;username=&#39;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token string">&#39;蜘蛛侠&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="转码获取" tabindex="-1"><a class="header-anchor" href="#转码获取" aria-hidden="true">#</a> 转码获取</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="删除-cookie" tabindex="-1"><a class="header-anchor" href="#删除-cookie" aria-hidden="true">#</a> 删除 cookie</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;username=;expires=&#39;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="setcookie-封装" tabindex="-1"><a class="header-anchor" href="#setcookie-封装" aria-hidden="true">#</a> setCookie 封装</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token punctuation">{</span> expires<span class="token punctuation">,</span> path<span class="token punctuation">,</span> domain<span class="token punctuation">,</span> secure <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;=&#39;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>expires<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&#39;;expires=&#39;</span> <span class="token operator">+</span> <span class="token function">afterOfDate</span><span class="token punctuation">(</span>expires<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&#39;;path=&#39;</span> <span class="token operator">+</span> path<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>domain<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&#39;;domain=&#39;</span> <span class="token operator">+</span> domain<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>secure<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&#39;;secure&#39;</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 获取n天后的时间</span>
<span class="token keyword">function</span> <span class="token function">afterOfDate</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  date<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>n <span class="token operator">+</span> day<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> date<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getcookie-封装" tabindex="-1"><a class="header-anchor" href="#getcookie-封装" aria-hidden="true">#</a> getCookie 封装</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// n121=sa; 名字=name; 名字2=2name</span>

<span class="token keyword">function</span> <span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> cookieStr <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> strat <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>strat <span class="token operator">==</span> <span class="token string">&quot;-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
​    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
​    <span class="token keyword">var</span> end <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">,</span>strat<span class="token punctuation">)</span><span class="token punctuation">;</span>
​    <span class="token keyword">if</span><span class="token punctuation">(</span>end <span class="token operator">==</span> <span class="token string">&quot;-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
​      end <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
​    <span class="token punctuation">}</span>
​    <span class="token keyword">var</span> str <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>strat<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
​    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token string">&quot;名字2&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="removecookie-封装" tabindex="-1"><a class="header-anchor" href="#removecookie-封装" aria-hidden="true">#</a> removeCookie 封装</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">removeCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;=;expires=&#39;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cookie-封装" tabindex="-1"><a class="header-anchor" href="#cookie-封装" aria-hidden="true">#</a> cookie 封装</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*
  $cookie()
  一个参数       获取
  两个参数或以上    设置
  两个参数，参数二 null 删除
 */</span>

<span class="token keyword">function</span> <span class="token function">$cookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
​    <span class="token keyword">case</span> <span class="token number">1</span> <span class="token operator">:</span>
​      <span class="token keyword">return</span> <span class="token function">getCookie</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
​    <span class="token keyword">case</span> <span class="token number">2</span> <span class="token operator">:</span>
​      <span class="token keyword">if</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
​        <span class="token function">removeCookie</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
​      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
​        <span class="token function">setCookie</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
​      <span class="token punctuation">}</span>
​      <span class="token keyword">break</span><span class="token punctuation">;</span>
​    <span class="token keyword">default</span><span class="token operator">:</span>
​      <span class="token function">setCookie</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>arguments<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
​      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>value<span class="token punctuation">,</span><span class="token punctuation">{</span>expires<span class="token punctuation">,</span>path<span class="token punctuation">,</span>domain<span class="token punctuation">,</span>secure<span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>expires<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&quot;;expires=&quot;</span> <span class="token operator">+</span> <span class="token function">afterOfDate</span><span class="token punctuation">(</span>expires<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&quot;;path=&quot;</span> <span class="token operator">+</span> path<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&quot;;domain=&quot;</span> <span class="token operator">+</span> domain<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>secure<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&quot;;secure&quot;</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> str<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">afterOfDate</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  date<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>n <span class="token operator">+</span> day<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> date<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> cookieStr <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> strat <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>strat <span class="token operator">==</span> <span class="token string">&quot;-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
​    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
​    <span class="token keyword">var</span> end <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">,</span>strat<span class="token punctuation">)</span><span class="token punctuation">;</span>
​    <span class="token keyword">if</span><span class="token punctuation">(</span>end <span class="token operator">==</span> <span class="token string">&quot;-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
​      end <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
​    <span class="token punctuation">}</span>
​    <span class="token keyword">var</span> str <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>strat<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
​    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">removeCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=;expires=&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function v(m,b){const t=e("ExternalLinkIcon");return o(),c("div",null,[l,n("ul",null,[n("li",null,[s("["),n("a",r,[s("domain=somewhere.com"),i(t)]),s("]：domain 限制访问域名 "),k])]),d])}const g=p(u,[["render",v],["__file","cookie.html.vue"]]);export{g as default};

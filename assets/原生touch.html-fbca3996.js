import{_ as i,o as l,c as e,f as a}from"./app-2a9bb723.js";const t={},c=a('<h1 id="javascript-原生-touch" tabindex="-1"><a class="header-anchor" href="#javascript-原生-touch" aria-hidden="true">#</a> JavaScript 原生 touch</h1><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><ul><li>touchstart：手指按下</li><li>touchmove：手指移动</li><li>touchend：手指抬起</li></ul><p>PC 端事件，比移动端事件略慢，大概慢 300ms</p><ul><li><p>点透问题：</p><ul><li>在 300ms 之内，如果上层元素消失或隐藏，目标就会漂移到下层元素身上，就会触发点击行为。</li></ul></li><li><p>解决办法：</p><ul><li>下层元素不要使用有点击特性的元素</li></ul></li></ul><h2 id="事件对象" tabindex="-1"><a class="header-anchor" href="#事件对象" aria-hidden="true">#</a> 事件对象</h2><p>ev 不需要兼容</p><p>ev 主要使用的 3 个属性：</p><ul><li>touches: 所有在屏幕上的手指的一个列表</li><li>targetTouches: 当前在目标元素上的手指的列表</li><li>changedTouches: 当前在目标元素上发生变化（触发当前事件）的手指的列表 最常用 <ul><li>clientX: 事件触发到可视区左边的距离</li><li>clientY:事件触发到可视区上边的距离</li><li>identifier: 标识符 第几个手指 0-n</li><li>pageX: 事件触发到页面的左边的距离</li><li>pageY: 事件触发到页面的上边的距离</li><li>radiusX: x 轴的旋转半径</li><li>radiusY: y 轴的旋转半径</li><li>rotationAngle: 旋转角度 deg</li><li>screenX: 事件触发到屏幕的左边距离</li><li>screenY: 事件触发到屏幕的上边距离</li></ul></li></ul>',9),r=[c];function h(o,u){return l(),e("div",null,r)}const s=i(t,[["render",h],["__file","原生touch.html.vue"]]);export{s as default};

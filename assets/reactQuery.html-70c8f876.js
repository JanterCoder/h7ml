const e=JSON.parse(`{"key":"v-6dc1078b","path":"/posts/react/reactQuery.html","title":"使用 react-query 让状态管理更加高效优雅","lang":"zh-CN","frontmatter":{"icon":"react","description":"本文介绍了如何使用 React Query 让前端项目的状态管理变得更加高效优雅，详细解析了 React Query 的用法和特性。","footer":"<a href='https://beian.mit.gov.cn/' target='blank'>浙ICP备2021037683号-2</a>React Query 状态管理","order":3,"star":3,"date":"2024-04-13T00:00:00.000Z","author":"h7ml","image":"https://www.h7ml.cn/logo.png","banner":"https://www.h7ml.cn/logo.png","category":["react","react query"],"tag":["React","状态管理","React Query"],"shortTitle":"React Query 状态管理","head":[["meta",{"name":"keywords","content":"React, 状态管理, React Query, 前端开发, 缓存, 自动更新, 异步请求"}],["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/react/reactQuery.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/react/reactQuery.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"使用 react-query 让状态管理更加高效优雅"}],["meta",{"property":"og:description","content":"本文介绍了如何使用 React Query 让前端项目的状态管理变得更加高效优雅，详细解析了 React Query 的用法和特性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.h7ml.cn/logo.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"使用 react-query 让状态管理更加高效优雅"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"React"}],["meta",{"property":"article:tag","content":"状态管理"}],["meta",{"property":"article:tag","content":"React Query"}],["meta",{"property":"article:published_time","content":"2024-04-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 react-query 让状态管理更加高效优雅\\",\\"image\\":[\\"https://www.h7ml.cn/logo.png\\"],\\"datePublished\\":\\"2024-04-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"什么是 react-query","slug":"什么是-react-query","link":"#什么是-react-query","children":[]},{"level":2,"title":"客户端应用状态","slug":"客户端应用状态","link":"#客户端应用状态","children":[]},{"level":2,"title":"服务端状态有以下特点","slug":"服务端状态有以下特点","link":"#服务端状态有以下特点","children":[{"level":3,"title":"React Query 还针对下列常见需求给出了自己的解决方案","slug":"react-query-还针对下列常见需求给出了自己的解决方案","link":"#react-query-还针对下列常见需求给出了自己的解决方案","children":[]}]},{"level":2,"title":"使用 react-query","slug":"使用-react-query","link":"#使用-react-query","children":[{"level":3,"title":"1. 首先，需要安装 React Query：","slug":"_1-首先-需要安装-react-query","link":"#_1-首先-需要安装-react-query","children":[]},{"level":3,"title":"2. 使用 useQuery 获取数据","slug":"_2-使用-usequery-获取数据","link":"#_2-使用-usequery-获取数据","children":[]},{"level":3,"title":"3. 优雅地处理错误和重试","slug":"_3-优雅地处理错误和重试","link":"#_3-优雅地处理错误和重试","children":[]},{"level":3,"title":"4. 缓存和自动更新","slug":"_4-缓存和自动更新","link":"#_4-缓存和自动更新","children":[]},{"level":3,"title":"5. 使用 useMutation 发送数据","slug":"_5-使用-usemutation-发送数据","link":"#_5-使用-usemutation-发送数据","children":[]},{"level":3,"title":"6. 使用 QueryClient 无缝整合","slug":"_6-使用-queryclient-无缝整合","link":"#_6-使用-queryclient-无缝整合","children":[]}]},{"level":2,"title":"QueryClient","slug":"queryclient","link":"#queryclient","children":[]},{"level":2,"title":"QueryClientProvider","slug":"queryclientprovider","link":"#queryclientprovider","children":[]},{"level":2,"title":"useMutation 里 如何将实时状态传递出去","slug":"usemutation-里-如何将实时状态传递出去","link":"#usemutation-里-如何将实时状态传递出去","children":[]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":10.09,"words":3026},"filePathRelative":"posts/react/reactQuery.md","localizedDate":"2024年4月13日","excerpt":"<h1> 使用 react-query 让状态管理更加高效优雅</h1>\\n<h2> 什么是 react-query</h2>\\n<p>React Query 是一个基于 React 的轻量级数据获取和状态管理库，其主要关注点在于客户端如何更好地管理服务器端状态。与传统的状态管理库（如 Redux 和 MobX）相比，它专注于处理服务器状态，简化了与后端数据交互的逻辑。</p>\\n<p>React Query 通过提供 useQuery、useMutation 等 hooks，使得开发者能够轻松地获取、更新、删除服务器端数据。此外，它还内置了数据缓存、自动更新、重试等功能，进一步优化了客户端与服务器端状态同步的体验。</p>"}`);export{e as data};

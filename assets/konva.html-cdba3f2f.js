const n=JSON.parse(`{"key":"v-c030419a","path":"/posts/graphics/konva.html","title":"konva","lang":"zh-CN","frontmatter":{"icon":"card","order":9,"date":"2021-01-17T00:00:00.000Z","author":"h7ml","category":"graphics","tag":"graphics","star":true,"description":"konva 前言 用过 Canvas 的都知道它的 API 比较多，使用起来也很麻烦，比如我想绘制一个圆形就要调一堆 API，对开发算不上友好。 const canvas = document.querySelector('canvas'); const context = canvas.getContext('2d'); // 设置字体样式 context.font = '24px SimSun, Songti SC'; context.fillText('24px的宋体呈现', 20, 50); // 绘制完整圆 context.fillStyle = 'RGB(255, 0, 0)'; context.beginPath(); context.arc(150, 75, 50, 0, Math.PI * 2); context.stroke();","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/graphics/konva.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/graphics/konva.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"konva"}],["meta",{"property":"og:description","content":"konva 前言 用过 Canvas 的都知道它的 API 比较多，使用起来也很麻烦，比如我想绘制一个圆形就要调一堆 API，对开发算不上友好。 const canvas = document.querySelector('canvas'); const context = canvas.getContext('2d'); // 设置字体样式 context.font = '24px SimSun, Songti SC'; context.fillText('24px的宋体呈现', 20, 50); // 绘制完整圆 context.fillStyle = 'RGB(255, 0, 0)'; context.beginPath(); context.arc(150, 75, 50, 0, Math.PI * 2); context.stroke();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"graphics"}],["meta",{"property":"article:published_time","content":"2021-01-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"konva\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"架构设计","slug":"架构设计","link":"#架构设计","children":[{"level":3,"title":"Konva Tree","slug":"konva-tree","link":"#konva-tree","children":[]},{"level":3,"title":"build dom","slug":"build-dom","link":"#build-dom","children":[]}]},{"level":2,"title":"渲染","slug":"渲染","link":"#渲染","children":[{"level":3,"title":"批量渲染","slug":"批量渲染","link":"#批量渲染","children":[]},{"level":3,"title":"Shape 绘制","slug":"shape-绘制","link":"#shape-绘制","children":[]},{"level":3,"title":"离屏渲染","slug":"离屏渲染","link":"#离屏渲染","children":[]},{"level":3,"title":"perfectDrawEnabled","slug":"perfectdrawenabled","link":"#perfectdrawenabled","children":[]}]},{"level":2,"title":"事件","slug":"事件","link":"#事件","children":[{"level":3,"title":"事件分发","slug":"事件分发","link":"#事件分发","children":[]},{"level":3,"title":"匹配 Shape","slug":"匹配-shape","link":"#匹配-shape","children":[]},{"level":3,"title":"自定义 hitFunc","slug":"自定义-hitfunc","link":"#自定义-hitfunc","children":[]},{"level":3,"title":"拖拽事件","slug":"拖拽事件","link":"#拖拽事件","children":[]}]},{"level":2,"title":"滤镜","slug":"滤镜","link":"#滤镜","children":[]},{"level":2,"title":"选择器","slug":"选择器","link":"#选择器","children":[]},{"level":2,"title":"序列化","slug":"序列化","link":"#序列化","children":[]},{"level":2,"title":"React","slug":"react","link":"#react","children":[{"level":3,"title":"react-reconciler","slug":"react-reconciler","link":"#react-reconciler","children":[]},{"level":3,"title":"react-konva","slug":"react-konva","link":"#react-konva","children":[]}]},{"level":2,"title":"vue-konva","slug":"vue-konva","link":"#vue-konva","children":[]},{"level":2,"title":"缺陷","slug":"缺陷","link":"#缺陷","children":[{"level":3,"title":"脏矩形","slug":"脏矩形","link":"#脏矩形","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":16.78,"words":5034},"filePathRelative":"posts/graphics/konva.md","localizedDate":"2021年1月17日","excerpt":"<h1> konva</h1>\\n<h2> 前言</h2>\\n<p>用过 Canvas 的都知道它的 API 比较多，使用起来也很麻烦，比如我想绘制一个圆形就要调一堆 API，对开发算不上友好。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> canvas <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelector</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'canvas'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> context <span class=\\"token operator\\">=</span> canvas<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getContext</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'2d'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 设置字体样式</span>\\ncontext<span class=\\"token punctuation\\">.</span>font <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'24px SimSun, Songti SC'</span><span class=\\"token punctuation\\">;</span>\\ncontext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fillText</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'24px的宋体呈现'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 绘制完整圆</span>\\ncontext<span class=\\"token punctuation\\">.</span>fillStyle <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'RGB(255, 0, 0)'</span><span class=\\"token punctuation\\">;</span>\\ncontext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">beginPath</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\ncontext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">arc</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">150</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">PI</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\ncontext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stroke</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
